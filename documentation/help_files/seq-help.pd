#N canvas 673 47 559 553 10;
#X obj 2 192 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 2 427 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 2 476 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 71 434 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 338 168 bng 15 250 50 0 empty empty empty 0 -6 0 10 -228856
-1 -1;
#X obj 71 455 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X obj 2 524 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 227 119 bng 18 250 50 0 empty bng_play empty 17 7 0 10 -216373
-66577 -1;
#X text 144 197 bang;
#X text 138 211 float;
#X obj 2 4 cnv 15 553 42 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 554 42 1 0 0;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X text 197 119 Play;
#X obj 227 169 print;
#X obj 71 199 cnv 17 3 224 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 191 457 sent at the end of a sequence (useful for looping)
;
#X text 132 292 append -;
#X text 186 291 records at the end of the stored sequence, f 59;
#X text 90 350 delay <float> -;
#X text 96 364 hook <float> -;
#X text 186 350 onset time in ms of the first event, f 59;
#X text 140 435 float -;
#X text 146 456 bang -;
#X text 116 481 1) symbol -;
#X msg 254 120 stop;
#X text 174 211 - raw MIDI data stream to be recorded, f 61;
#X text 191 435 raw MIDI data stream from played sequence;
#X text 356 168 <= when finished;
#X text 138 379 print -;
#X text 186 378 prints the first 16 events of the sequence in the Pd
Window;
#X text 90 240 start <float> -;
#X text 90 226 read <symbol> -;
#X text 84 336 write <symbol> -;
#X text 132 278 record -;
#X text 144 264 stop -;
#X text 144 321 tick -;
#X text 186 276 starts recording raw MIDI received in the inlet, f
59;
#X text 186 321 external clock \, needed after 'start -1' message,
f 59;
#X text 174 197 - starts or restarts playing a sequence at normal speed
, f 61;
#X obj 17 57 cyclone/comment 425 14 DejaVu\ Sans\ Mono empty 0 0 0
0 0 255 255 255 0 0 MIDI sequencer;
#X obj 16 4 cyclone/comment 425 33 DejaVu\ Sans\ Mono empty 0 0 0 0
0 255 255 255 0 0 seq;
#X obj 322 28 cyclone/comment 425 13 DejaVu\ Sans\ Mono empty 0 224
228 220 0 255 255 255 0 0 Objects cloned from Max/MSP;
#X obj 363 4 cyclone/comment 425 24 DejaVu\ Sans\ Mono empty 0 224
228 220 0 255 255 255 0 0 cyclone;
#X text 186 264 stops recording/playing and goes back to start, f
59;
#X text 66 82 [seq] plays/records raw MIDI streams and can save/read
MIDI sequence files. All tracks of a multi-track midi file are merged
into one.;
#N canvas 814 130 447 497 start 0;
#X msg 84 335 start -1;
#X obj 166 355 metro;
#X msg 166 379 tick;
#X obj 166 421 cyclone/seq seq.txt;
#X obj 166 332 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X obj 166 288 loadbang;
#X text 31 23 The 'start' message starts reading the loaded sequence
and also allows you to control the playback speed \, set by the float
after the 'start' message - the normal speed is set as 'start 1024'
\, so 'start 512' is half the tempo (reads two times slower) \, 'start
2048' is twice the tempo (two times faster) and so on. If you send
it just "start" \, it plays at the original speed (so it's the same
as the bang message or 'start 1024').;
#X text 33 133 Note that the 'start' message can only set the speed
once (at the start of the sequence) - because every time we send the
start message \, it starts playing from the start! Thus \, a bang or
a 'start' message can also be used to 'restart' the sequence.;
#X obj 218 389 nbx 7 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 20.8333 256;
#X obj 218 362 expr 60000 / ($f1 * 24);
#X text 33 204 When you send it "start -1" \, it expects 'tick' messages
as the clock \, so you can use it to vary the playback tempo or to
synchronize with another clock (such as incoming MIDI Clock messages).
24 clock ticks is a quarter note \, you can convert BPM to time per
clock tick;
#X text 46 334 play:;
#X text 293 382 tick time in ms, f 9;
#X msg 218 318 120;
#X obj 218 339 nbx 3 14 30 240 0 0 empty empty empty 0 -8 0 10 -228856
-1 -1 120 256;
#X text 286 338 BPM;
#X obj 166 451 print;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 16 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 5 0 13 0;
#X connect 8 0 1 1;
#X connect 9 0 8 0;
#X connect 13 0 14 0;
#X connect 14 0 9 0;
#X restore 492 144 pd start;
#X obj 227 146 cyclone/seq seq.mid;
#N canvas 961 124 501 385 inconsistencies 0;
#X text 82 307 Since Max 7.3.2 \, there's support for MIDI Type 1 (separate
information for each track). Cyclone already did load this kind of
file but it doesn't save to type 1!;
#X text 78 34 The [seq] object misses some messages from the original
MAX version and has extra messages that the original does not have.
, f 57;
#X text 101 88 - Missing from the original in MAX:;
#X text 124 109 - 'dump';
#X text 124 124 - 'addeventdelay';
#X text 124 141 - 'clear';
#X text 101 177 - Extra messages missing in the original in MAX:;
#X text 124 199 - 'pause';
#X text 124 214 - 'continue';
#X text 83 252 Moreover \, the [seq] object i cyclone can be clicked
to open an edit window \, while nothing like this is present in the
MAX original., f 55;
#X restore 24 160 pd inconsistencies;
#X text 138 393 pause -;
#X text 120 407 continue -;
#X text 186 224 reads from MIDI/text files (no symbol opens a dialog
box), f 59;
#X text 186 336 saves to MIDI/text files (no symbol opens a dialog
box), f 59;
#X text 191 481 a MIDI/text file to be loaded;
#N canvas 871 85 493 502 text 0;
#X text 38 39 Besides MIDI files \, [seq] can load and save to .txt
files \, just use this extension instead. The text file follows a format
that is also present in the edit window of the [seq] object that opens
when you click on the object (note that this edit window functionality
is not present in the original MAX object)., f 67;
#X obj 128 133 cyclone/seq seq.mid;
#X text 253 133 <= click to open;
#X text 38 256 For example \, let's check the sequence below:;
#X text 136 284 0 144 60 112 \; 1000 144 60 0 \; 1500 192 31 \; 1500
144 60 112 \; 2500 144 60 0 \;, f 17;
#X text 39 192 The text format displays the MIDI events in lines separated
by semicolons \, which consist of a start time in milliseconds (the
time elapsed since the beginning of the sequence) followed by the raw
bytes of the MIDI message., f 67;
#X text 39 371 This sequence plays the note middle C on channel 1 (with
a velocity of 112) for one second \, then half a second later changes
to program number 31 and plays middle C again for one second., f 67
;
#X text 40 424 You can edit and close/save changes to the sequence
\, but you need to write it to a file so it's saved., f 67;
#X restore 498 123 pd text;
#X obj 2 500 cnv 3 550 3 empty empty click 8 12 0 13 -228856 -1 0;
#X text 186 239 start/restart sequence at a given tempo (default '1024'
- normal tempo) \, 'start -1' expects tick messages, f 59;
#X text 138 307 clear -;
#X text 186 307 clears the sequence currently stored in the object
, f 59;
#X text 159 505 opens a window to write/edit the sequence;
#X text 186 364 multiplies all the event times by the given number
, f 59;
#N canvas 806 74 526 534 more 0;
#X msg 67 255 delay 500;
#X msg 104 344 pause;
#X msg 112 366 continue;
#X msg 97 321 print;
#X obj 289 368 cyclone/midiparse;
#X obj 289 189 tgl 22 0 empty empty empty 17 7 0 10 -216373 -66577
-1 0 1;
#X msg 317 254 stop;
#X obj 289 253 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 319 191 play/stop;
#X obj 289 340 cyclone/midiflush;
#X msg 249 254 bang;
#X obj 289 221 select 1 0;
#N canvas 638 210 345 266 polysynth 0;
#X obj 65 20 inlet;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 41 151 pd synth;
#X obj 65 84 pack f f f;
#X obj 100 207 outlet~;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 100 151 pd synth;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 161 152 pd synth;
#X text 124 19 3-voice polyphonic synth;
#X obj 65 115 route 1 2 3, f 18;
#X obj 65 52 poly 3 1;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 2 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 7 0 1 0;
#X connect 7 1 4 0;
#X connect 7 2 5 0;
#X connect 8 0 2 0;
#X connect 8 1 2 1;
#X connect 8 2 2 2;
#X restore 289 401 pd polysynth;
#X obj 289 447 ./out~;
#X obj 77 414 s \$0-more-messages;
#X obj 369 268 r \$0-more-messages;
#X msg 80 277 hook 2;
#X msg 88 296 hook 0.5;
#X text 18 55 The 'hook' message multiplies all the event times by
the given number \, so '2' is twice as long and '0.5' is twice as fast.
This is cumulative \, so you can keep speeding up or slowing it down
by sending the same message multiple times., f 79;
#X text 18 95 The 'print' message prints the first 16 events of the
sequence in the Pd Window in the same format as the edit window.,
f 79;
#X text 18 124 Cyclone has extra messages: pause and continue do the
obvious and only work when playing (not when recording)., f 79;
#X obj 289 310 cyclone/seq seq.mid;
#X text 18 36 The delay message sets an onset delay time in ms to the
start of the sequence., f 79;
#X connect 0 0 14 0;
#X connect 1 0 14 0;
#X connect 2 0 14 0;
#X connect 3 0 14 0;
#X connect 4 0 12 0;
#X connect 5 0 11 0;
#X connect 6 0 21 0;
#X connect 7 0 21 0;
#X connect 9 0 4 0;
#X connect 10 0 9 0;
#X connect 11 0 7 0;
#X connect 11 1 6 0;
#X connect 11 1 10 0;
#X connect 12 0 13 0;
#X connect 12 0 13 1;
#X connect 15 0 21 0;
#X connect 16 0 14 0;
#X connect 17 0 14 0;
#X connect 21 0 9 0;
#X connect 21 1 7 0;
#X restore 498 165 pd more;
#X text 186 407 continues playing after a pause message was given,
f 59;
#X text 186 393 pauses playing, f 59;
#N canvas 501 115 884 498 basic 0;
#X obj 150 319 cyclone/midiparse;
#X obj 179 149 tgl 22 0 empty empty empty 17 7 0 10 -216373 -66577
-1 0 1;
#X msg 186 216 stop;
#X obj 150 220 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 209 151 play/stop;
#X obj 150 291 cyclone/midiflush;
#X msg 255 251 bang;
#X text 289 244 flush hanging;
#X text 291 258 MIDI notes;
#X msg 470 144 record;
#X obj 600 149 midiin;
#X obj 609 178 notein;
#X obj 609 238 cyclone/midiformat;
#X obj 609 202 pack;
#X obj 179 181 select 1 0;
#X obj 84 154 loadbang;
#X msg 44 180 read;
#X msg 439 200 write;
#X obj 471 390 cyclone/midiparse;
#X obj 614 390 cyclone/midiformat;
#X obj 545 426 cyclone/midiflush;
#X text 249 367 synthesizer, f 18;
#N canvas 638 210 345 266 polysynth 0;
#X obj 65 20 inlet;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 41 151 pd synth;
#X obj 65 84 pack f f f;
#X obj 100 207 outlet~;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 100 151 pd synth;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 161 152 pd synth;
#X text 124 19 3-voice polyphonic synth;
#X obj 65 115 route 1 2 3, f 18;
#X obj 65 52 poly 3 1;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 2 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 7 0 1 0;
#X connect 7 1 4 0;
#X connect 7 2 5 0;
#X connect 8 0 2 0;
#X connect 8 1 2 1;
#X connect 8 2 2 2;
#X restore 150 352 pd polysynth;
#X text 231 352 <= 3 voice polyphonic;
#X msg 84 179 read seq.mid;
#X obj 150 398 ./out~;
#X text 23 21 Below \, we play and stop with a toggle. At the end of
the file \, a bang out the 2nd outlet of [seq] makes it play again
in a loop. When you stop it with the toggle \, it also flushes possible
hanging MIDI notes (with [midiflush]). We use [midiparse] to send note
messages to our synth.;
#X text 414 77 Use 'write' to save to a MIDI file with the dialog box
\, or use 'write <symbol>' to save to a specific file., f 59;
#X text 25 87 Use the 'read' message to open another file with the
dialog box and 'read seq.mid' to re open the example. The 'delay' message
adds a delay in ms before sending the fisrt event.;
#X obj 150 251 cyclone/seq;
#X msg 519 144 stop;
#X msg 537 170 append;
#X obj 537 270 s \$0-seq;
#X obj 254 213 r \$0-seq;
#X text 414 25 You can directly record from raw MIDI data with [midiin].
Use the 'record' message to start recodring \, you don't need the stop
message to switch from recording/playing. Use 'append' to record from
the point you stopped recording.;
#X text 439 308 You can record from [makenote] or specialized MIDI
objects such as [notein] using the [midiformat] object to convert the
messages to raw MIDI. Please check the help file of [midiparse] \,
[midiformat] and [midiflush] \, which are useful with [seq]., f 55
;
#X obj 660 212 pack;
#X msg 660 166 60;
#X obj 660 191 makenote 120 100;
#X obj 660 142 metro 250;
#X obj 660 121 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X connect 0 0 22 0;
#X connect 1 0 14 0;
#X connect 2 0 29 0;
#X connect 3 0 29 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 9 0 32 0;
#X connect 10 0 32 0;
#X connect 11 0 13 0;
#X connect 11 1 13 1;
#X connect 12 0 32 0;
#X connect 13 0 12 0;
#X connect 14 0 3 0;
#X connect 14 1 2 0;
#X connect 14 1 6 0;
#X connect 15 0 24 0;
#X connect 16 0 29 0;
#X connect 17 0 32 0;
#X connect 22 0 25 0;
#X connect 22 0 25 1;
#X connect 24 0 29 0;
#X connect 29 0 5 0;
#X connect 29 1 3 0;
#X connect 30 0 32 0;
#X connect 31 0 32 0;
#X connect 33 0 29 0;
#X connect 36 0 12 0;
#X connect 37 0 38 0;
#X connect 38 0 36 0;
#X connect 38 1 36 1;
#X connect 39 0 37 0;
#X connect 40 0 39 0;
#X restore 492 102 pd basic;
#X connect 7 0 48 0;
#X connect 26 0 48 0;
#X connect 48 0 15 0;
#X connect 48 1 4 0;
